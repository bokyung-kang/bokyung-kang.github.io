<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sentry on Bokyung&#39;s Note</title>
    <link>https://bokyung.dev/ja/tags/sentry/</link>
    <description>Recent content in Sentry on Bokyung&#39;s Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 16 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bokyung.dev/ja/tags/sentry/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sentryをreact.jsプロジェクトへ適用する</title>
      <link>https://bokyung.dev/ja/2021/04/16/sentry-react/</link>
      <pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bokyung.dev/ja/2021/04/16/sentry-react/</guid>
      <description>公式サイト の見ながらreact.jsプロジェクトにSentryを適用してみました。
バージョン  react 17.0.1 Sentry  @sentry/react 6.2.5 @sentry/tracing 6.2.5    Sentryへプロジェクト追加及び設定  Sentryへログイン後、プロジェクト作成。 Client Keys (DSN)メニューに書いてある、DSNキーをコピーしておきます。    sentry パッケージインストール npm install --save @sentry/react @sentry/tracing  index.jsにSentryを初期化するコードを追加します。 import React from &amp;quot;react&amp;quot;; import ReactDOM from &amp;quot;react-dom&amp;quot;; import * as Sentry from &amp;quot;@sentry/react&amp;quot;; import { Integrations } from &amp;quot;@sentry/tracing&amp;quot;; import App from &amp;quot;./App&amp;quot;; import &amp;quot;./index.css&amp;quot;; Sentry.init({ // 全ての環境に設定時 dsn: &amp;quot;https://xxxxxxxxxxxxxxxxxxxxxxxxxxx@xxxxxx.ingest.sentry.io/xxxxx&amp;quot;, // productionのみ設定時 dsn: process.env.NODE_ENV === &amp;quot;production&amp;quot; ?</description>
    </item>
    
    <item>
      <title>SentryをSpringBootプロジェクトへ適用する</title>
      <link>https://bokyung.dev/ja/2021/04/15/sentry-springboot/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bokyung.dev/ja/2021/04/15/sentry-springboot/</guid>
      <description>react.jsへSentryを適用しようと思い、公式ドキュメントを見てみると対応言語の中にSpringBootがあったため、試してみました。
バージョン  Spring Boot 2.4.1 Sentry  sentry-spring-boot-starter 4.3.0    Sentryへプロジェクト追加及び設定   Sentryへログイン後、プロジェクト作成。
  Client Keys (DSN)メニューに書いてある、DSNキーをコピーしておきます。     build.gradle.ktsに依存関係を追加します。
 build.gradle.kts implementation(&amp;quot;io.sentry:sentry-spring-boot-starter:4.3.0&amp;quot;)     application.properties에 DSN (Data Source Name)を設定します。
 application.properties # DSN設定 sentry.dsn=https://xxxxxxxxxxxxxxxxxxxxxxxxxxx@xxxxxx.ingest.sentry.io/xxxxx # エラートレース設定 sentry.enable-tracing=true  application-development.properties # 各環境の設定も可能です。 sentry.environment=development     Sentryにエラーを送るための設定
 サンプルプロジェクトがRestApiプロジェクトなので、@RestControllerAdviceを利用して共通エラー処理を追加しました。 @RestControllerAdvice class SampleControllerAdvice { @ResponseStatus(HttpStatus.BAD_REQUEST) @ExceptionHandler(MissingPathVariableException::class) fun handleMissingPathVariable(ex: MissingPathVariableException): Map&amp;lt;String, String&amp;gt; { Sentry.</description>
    </item>
    
  </channel>
</rss>
